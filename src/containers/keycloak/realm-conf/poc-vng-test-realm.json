{
  "realm" : "poc-vng-test-realm",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : false,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "name" : "zoeken-werkzoekende",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "poc-vng-test-realm",
      "attributes" : { }
    }, {
      "name" : "rapportage",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "poc-vng-test-realm",
      "attributes" : { }
    }, {
      "name" : "user",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "poc-vng-test-realm",
      "attributes" : { }
    }, {
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "poc-vng-test-realm",
      "attributes" : { }
    }, {
      "name" : "upload-vacatures",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "poc-vng-test-realm",
      "attributes" : { }
    }, {
      "name" : "zoeken-vacatures",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "poc-vng-test-realm",
      "attributes" : { }
    }, {
      "name" : "default-roles-spring-realm",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "poc-vng-test-realm",
      "attributes" : { }
    }, {
      "name" : "upload-werkzoekende",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "poc-vng-test-realm",
      "attributes" : { }
    }, {
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "poc-vng-test-realm",
      "attributes" : { }
    } ],
    "client" : {
      "poc-vng-frontend" : [ ],
      "realm-management" : [ {
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "view-identity-providers", "impersonation", "create-client", "manage-authorization", "manage-events", "manage-realm", "manage-clients", "view-events", "view-authorization", "manage-identity-providers", "view-realm", "manage-users", "view-users", "query-clients", "view-clients", "query-groups", "query-realms", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      }, {
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "28194779-6cb6-422a-91ad-4bd11a17b13a",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0ff00f53-d4b3-4647-9dde-d1ac7efa0edb",
        "attributes" : { }
      } ],
      "account" : [ {
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "622686b0-5160-49fd-test2a-f91fee49b551",
        "attributes" : { }
      }, {
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "622686b0-5160-49fd-test2a-f91fee49b551",
        "attributes" : { }
      }, {
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "622686b0-5160-49fd-test2a-f91fee49b551",
        "attributes" : { }
      }, {
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "622686b0-5160-49fd-test2a-f91fee49b551",
        "attributes" : { }
      }, {
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "622686b0-5160-49fd-test2a-f91fee49b551",
        "attributes" : { }
      }, {
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "622686b0-5160-49fd-test2a-f91fee49b551",
        "attributes" : { }
      }, {
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "622686b0-5160-49fd-test2a-f91fee49b551",
        "attributes" : { }
      } ],
      "poc-vng-backend" : [ ],
      "kong" : [ ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "name" : "default-roles-spring-realm",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "poc-vng-test-realm"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpSupportedApplications" : [ "FreeOTP", "Google Authenticator" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "users" : [ {
    "username" : "almelo",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "00000001001584108000" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716775986,
      "secretData" : "{\"value\":\"96kibrdWFz4G3JPecnRQ9rv7grUOo6NlW7OYpRI1BxJfpC0FDYa7MUI9wLkspPinEAUErut0VOAgARsHH4IggQ==\",\"salt\":\"vCeNKOzrwQ+3f/BIMJUvgA==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "zoeken-werkzoekende", "user", "upload-vacatures", "zoeken-vacatures", "default-roles-spring-realm", "upload-werkzoekende" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "username" : "bodegraven-reeuwijk",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "00000001823181522000" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716776676,
      "secretData" : "{\"value\":\"ztPyzSmrSwBdkb9edvuKz9am3ZahMWnwc/nFaLCYFkXsPbpvLFgp2NPutPk1/Hglk+JBBie+cOCH01KOJAuq2A==\",\"salt\":\"fL0QqzGVYa0pl/Ie0YKUkA==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "zoeken-werkzoekende", "user", "rapportage", "upload-vacatures", "zoeken-vacatures", "default-roles-spring-realm", "upload-werkzoekende" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "username" : "enschede",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "00000001001589623000" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716775886,
      "secretData" : "{\"value\":\"9U3mGU2wemH6g6fteMKXTjtlnFRNjEV+B0uR0GQIm4k26/9I+Nj+LVtoiYRZGuwMqhkLfxzmJLNqpD5hs3V9PQ==\",\"salt\":\"BXiymC3gisLPCN5dvucsng==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "zoeken-werkzoekende", "user", "default-roles-spring-realm", "upload-werkzoekende" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "username" : "hengelo",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "00000001001888730000" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716775779,
      "secretData" : "{\"value\":\"f53/TaefCVuYuOCOafTWxcrWZNWpRujAuEIxCU8FG2CwKh2rAwrjvac2QpWhPfr3mmAGvaKinfubETNiWczLTw==\",\"salt\":\"rRoOm7COcdiSOUE+ix76aQ==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "zoeken-werkzoekende", "user", "rapportage", "upload-vacatures", "zoeken-vacatures", "default-roles-spring-realm", "upload-werkzoekende" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "username" : "houten",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "00000001002313388000" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716776179,
      "secretData" : "{\"value\":\"u8P/+CWzzTY2KpK4MnaLMmrR8OaRrx6tBNyjTXpYtoVt5F7v/delB4NpsO4iFI3hrL94GRE+KVGv4Q2Ek32dvw==\",\"salt\":\"jRRvlyKJJeFkLF5hp+47ig==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "user", "zoeken-vacatures", "default-roles-spring-realm" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "username" : "ijsselstein",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "00000001002313832000" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716776358,
      "secretData" : "{\"value\":\"05XE4KmtpvyJMCWd9CGAREOI2KFzF1PAIdaL0tKNZymTvF2KqO2zqJtxREOqHG2+DEjAudedW5PsiAayMsp1Lg==\",\"salt\":\"GHCuYAJxI8R9zuI/FOL4QA==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "zoeken-werkzoekende", "user", "upload-vacatures", "zoeken-vacatures", "default-roles-spring-realm", "upload-werkzoekende" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "username" : "lopik",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "00000001002313455000" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716776268,
      "secretData" : "{\"value\":\"OFZU0vFjFFzSRdClPrdmbVZZqgjSWfIvyc/yO+LnyACFXiFZ0oZV9uDLP9RLphP86JlO5CDQjN03yIqjPRjKPA==\",\"salt\":\"PkdE3FYpgI60gzARcDpFbA==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "zoeken-werkzoekende", "user", "default-roles-spring-realm" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "username" : "montfoort",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "00000001001721628000" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716776800,
      "secretData" : "{\"value\":\"XJYjYe7FffYu5M8APjdNwWH3P5R40MT+V4qqFZ7TNYIRKoN8gBhLw8laxjuYBwoDot6DlTdMVjj7cnYfeXxjzg==\",\"salt\":\"1DryWtV42aF0gTpJo3yZXQ==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "user", "upload-vacatures", "default-roles-spring-realm" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "username" : "nieuwegein",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "00000001002313546000" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716776088,
      "secretData" : "{\"value\":\"sVAcCk/K7FBfFJfM9u+dO8GR9rV9EBA2E9xaisaXByPK3d4dBzjGiWz9EpIPxGRpkM9slTnwjsyoIDdtbBQvvA==\",\"salt\":\"6y9ZsNPkL7hw3kf83uJTHg==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "user", "default-roles-spring-realm", "upload-werkzoekende" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "username" : "oudewater",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "00000001001721689000" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716776890,
      "secretData" : "{\"value\":\"qWLkp1AM45zpisfeNAnpfIc0+T699dVSR7u+FP/5OwFLJ3ij+cAyvD9K1i9KgeCLBZKL1MfLWZZ+QsYFh1eNFQ==\",\"salt\":\"CKiOojRPeAsddwqgvYmGAA==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "zoeken-werkzoekende", "user", "upload-vacatures", "zoeken-vacatures", "default-roles-spring-realm", "upload-werkzoekende" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "username" : "riemer",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "12345678901234567893" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716777180,
      "secretData" : "{\"value\":\"6RLE0AhdKisq46wN9NeLXkhW9CCoCkqgpz6Epi75vitbbzCDa0K+SL9UnfoBDhgBtUiXEAr82xeDgCow1GqF5w==\",\"salt\":\"WUpdcpRdKLPB+B/fdzXfrg==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "user", "upload-vacatures", "default-roles-spring-realm", "upload-werkzoekende" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "username" : "rvrd",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "12345678901234567891" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716777276,
      "secretData" : "{\"value\":\"HvHS4NX/P2kCeVeNefr4KiggkLZf2iK9efJJl6M0PYntER1C1pMAW4hS8eQwj61ihLOyE2B0dpSz1oD5n4M1rQ==\",\"salt\":\"aPlryUKYCN8sPMnN1wECkA==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "user", "default-roles-spring-realm", "upload-werkzoekende" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "username" : "stijns",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "12345678901234567890" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716777083,
      "secretData" : "{\"value\":\"U/NAe0pq/ys/5t7evuuGhe7Gt5CK6By1p59JQrGLCj8Hj/JzotUexDydHSXfMoN2FeGWDrN0pJz97Dpi28UBOg==\",\"salt\":\"uSjMXoEqO/VG/qjs96wKpA==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "zoeken-werkzoekende", "user", "zoeken-vacatures", "default-roles-spring-realm" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "username" : "utrecht",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "00000001002220647000" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716775663,
      "secretData" : "{\"value\":\"BI4M7YSYYQVrefCBYYMZurjRJDi6JBjcoIbJpFtKghBDkmI4l3/S2mGXqyvUJCS27SV0JMuFw7WbdyEDDZTjxw==\",\"salt\":\"ZBlxTIqIC2Hbv1cMgPZLSQ==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "user", "upload-vacatures", "zoeken-vacatures", "default-roles-spring-realm" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "username" : "vergunningssoftware bv",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "12345678901234567892" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716776994,
      "secretData" : "{\"value\":\"9v/VRsLvvpU9XH5UBrWZar9Q2X2PGR0QP4KwMCbnVZ1hTmLSUOEFe9G5ktXJPH4zm2IEKKTYzpkEth/k7FZgow==\",\"salt\":\"mpajeAuBRtV5uyLT17vmiw==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "user", "upload-vacatures", "default-roles-spring-realm" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "username" : "vianen",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "00000001062000561000" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716776462,
      "secretData" : "{\"value\":\"LMYMx8VmlocCAcKLtVTkTsc6Q8E++ayP+O2WedSD95ufW4Et2C1SS4jvc1qeA/FjCcdTFfA6QfRFcoRu2Xehww==\",\"salt\":\"02Ri2z45CkInB2MA30B5xg==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "zoeken-werkzoekende", "user", "upload-vacatures", "zoeken-vacatures", "default-roles-spring-realm", "upload-werkzoekende" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "username" : "vng",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "00000001821002193000" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716777366,
      "secretData" : "{\"value\":\"I8HMn1cQZAWFmdwPS0DRnj54lGjiphQBxkkid3S/wXNoGsRdBCqRMHmol4ksM8YxO3QJDwHoEVGdMkvZG91B2w==\",\"salt\":\"nk7QL2NF3dI0LtmhhMjcjw==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "zoeken-werkzoekende", "user", "rapportage", "upload-vacatures", "zoeken-vacatures", "default-roles-spring-realm", "upload-werkzoekende" ],
    "notBefore" : 0,
    "groups" : [ ]
  }, {
    "username" : "woerden",
    "enabled" : true,
    "totp" : false,
    "emailVerified" : false,
    "attributes" : {
      "oin" : [ "00000001001721860000" ]
    },
    "credentials" : [ {
      "type" : "password",
      "createdDate" : 1669716776566,
      "secretData" : "{\"value\":\"IbgGSxsaMhnKmr94N7ru2DNPOSuiKm5ZEkq/S6JTOwb0Vjze6zCZ6EQSZKHHzZ8iPh1aTKO6TTunkG6u3aSgVQ==\",\"salt\":\"sbbL2nlViGyMAbi64IQ2dw==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "zoeken-werkzoekende", "user", "upload-vacatures", "zoeken-vacatures", "default-roles-spring-realm", "upload-werkzoekende" ],
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account" ]
    } ]
  },
  "clients" : [ 
    {
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/poc-vng-test-realm/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/poc-vng-test-realm/account/*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/spring-realm/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/spring-realm/account/*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : ["*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : ["*" ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "clientId" : "kong",
    "rootUrl" : "http://localhost:8000",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "**********",
    "redirectUris" : [ "http://localhost:8000/*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "saml.artifact.binding" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "clientId" : "poc-vng-backend",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:8081/*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "saml.artifact.binding" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "clientId" : "poc-vng-frontend",
    "baseUrl" : "https://acc1-um.testdorp.nl",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:8080/*", "http://localhost:8080", "https://acc1-um.testdorp.nl/*", "https://acc1-um.testdorp.nl" ],
    "webOrigins" : [ "*", "https://acc1-um.testdorp.nl" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "id.token.as.detached.signature" : "false",
      "saml.assertion.signature" : "false",
      "saml.force.post.binding" : "false",
      "saml.multivalued.roles" : "false",
      "saml.encrypt" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false",
      "saml.server.signature" : "false",
      "saml.server.signature.keyinfo.ext" : "false",
      "use.refresh.tokens" : "true",
      "exclude.session.state.from.auth.response" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "saml.artifact.binding" : "false",
      "backchannel.logout.session.required" : "true",
      "client_credentials.use_refresh_token" : "false",
      "saml_force_name_id_format" : "false",
      "require.pushed.authorization.requests" : "false",
      "saml.client.signature" : "false",
      "tls.client.certificate.bound.access.tokens" : "false",
      "saml.authnstatement" : "false",
      "display.on.consent.screen" : "false",
      "saml.onetimeuse.condition" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "name": "roles",
      "protocol": "openid-connect",
      "protocolMapper": "oidc-usermodel-realm-role-mapper",
      "consentRequired": false,
      "config": {
        "multivalued": "true",
        "userinfo.token.claim": "false",
        "id.token.claim": "false",
        "access.token.claim": "true",
        "claim.name": "roles",
        "jsonType.label": "String"
       }
    },{
      "name" : "oin",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "oin",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "oin",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/poc-vng-test-realm/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/poc-vng-test-realm/console/*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "String"
      }
    }, {
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "web-origins", "role_list", "profile", "roles", "email" ],
  "defaultOptionalClientScopes" : [ "offline_access", "microprofile-jwt", "phone", "address" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "loginTheme" : "customlogin",
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-property-mapper", "saml-user-attribute-mapper", "oidc-full-name-mapper", "oidc-usermodel-property-mapper", "oidc-address-mapper", "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "oidc-sha256-pairwise-sub-mapper" ]
      }
    }, {
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "oidc-address-mapper", "oidc-usermodel-attribute-mapper", "oidc-usermodel-property-mapper", "saml-user-attribute-mapper", "oidc-full-name-mapper", "saml-user-property-mapper" ]
      }
    }, {
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEogIBAAKCAQEAh9Tw/gwJshf4Zdt2vwC3cKYouyZ+PTLh07NoY8ZrrKH8s/jWIQ3D4Y2Qs5jx9EFjlMnqsgojF9WWHEdr970Sn/grnhuEtirXSQCt8AG7GheRA2FmpojqLKK0R4OTNISdFb1+oeugMTbHUhQb8hA5SpL7iNVJjvwzZr9h8FE8M0o+PB31v3fV3KJuvMDA5zrgPViJuG/Y9Cep5sC1QK1ChzHHuRYmOsHzV0fUOILLknN6ep5F0MAP4h+R+P/mw1laDiKkp7nkE/1jcOCih69r7Smzvn5uQmHWeZ4noIAI+OTGM3sxUGEw4lOPWHha7I/EsfUx93m9zGZavcGXfmVP+wIDAQABAoIBADyRSDCP35bpN1r75FRBFosFnG3vOSVC1g3XFvo+lO6ygIMjtx+gCrM9s8NRtLnsmmHTM3LWMFXFaJ0Nf+hFB9QLDi//J0sviTXFNsopi2uUDJaMTQB/VqQ2nNqyoeYuJ/l0uM2syo6HVZOU4e0rLNDC/6RBLv6yGJ19Q0esgYKAtUQr0/u/wiVLFNik7Vnh72xKlEjPIGK5wywJ1qFLLDmE65GjDLVNjqi3ZEfkEVMkdjZSdKHcnKZgc6km0u9gnq4FHyGwESjmpPEXvaUsOranHIfm7FMK4KC0RnCSdFctjK1AnxWyuMp8KxVa0I/GfSDhDmGFN16r6Kj7zxN4b1kCgYEA2VYiRQqbbd0/77nCqW5B5wyDVNZE0HqoP3E73yciu3aApmyOLDuonhJzZewrLbinyqmYr1yrpXyQJUOgxSNbBCunmudmJPsKetFmrE6/InZfpFwg0QP//k1K3NqTa1J/cSUBQtRRO0ZVzw8sLqjk9rTuMgpv0DwK8uy99wsKPR0CgYEAn/7y7/w7lkTFwcsT+YpgaVQRAfB6jEYA+v7nxvYArBRwpTJeInuvPQSm52xgFfpVPtZ5PZZCj1sv8BkITJwQZghugDnolYETGFnYHDdc5a+lCawmKPgzyTtb1z6h39YxTDya4nQ7flHPXFqXU903SM/v1dzw5qcvCnWvSqRLbfcCgYBAWgWppbth62n8BGfEHTZ8QDM+0nbrt/XLWy7cI01gbnUnUetC46NIsrPikOw0DIH6Ov9PpUPZqylPL1gSJybS9E4bSrru5jozJX+eM27auGwXUYQR/3o0BRTOkhWmaHX9vXRDInSu9WOA/MAbTL0G44nH3VlAMhcX2Mtis60jbQKBgBhkvpVoV41pnt0VIU6CkoB8mLs69vQ8GBoskxn6l8+krigBreiEAwvCkc/m7h9rs2OJP6LsLem9dWmd524GvVlRH8fdDGD+9PJZgGGM71T1mqwG2yqT7RFZQ39lxThjZ9C/zL2KCygPQRZLmZbnu24WhfKNZQ1FoB5wIvG2aumxAoGAeG19QxOeo4CsiNSyWJx9qCdEgk+sMYJe/wsBLq6TUMjy5H1bUak0Fn9FH9ZZ+i0xl3UZo0eEdn0AqZZ9EylVZqaiuZBw7I0I8QZqUC0uZQc1q5q1WEG19CwFAcDhJU33vQZ+SU7BTy/zXI70ZbpCEVKPojW0JI93T/Xy+Jfiz00=" ],
        "certificate" : [ "MIICqTCCAZECBgGEwuASBjANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1wb2Mtdm5nLXJlYWxtMB4XDTIyMTEyOTEwMTExNVoXDTMyMTEyOTEwMTI1NVowGDEWMBQGA1UEAwwNcG9jLXZuZy1yZWFsbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIfU8P4MCbIX+GXbdr8At3CmKLsmfj0y4dOzaGPGa6yh/LP41iENw+GNkLOY8fRBY5TJ6rIKIxfVlhxHa/e9Ep/4K54bhLYq10kArfABuxoXkQNhZqaI6iyitEeDkzSEnRW9fqHroDE2x1IUG/IQOUqS+4jVSY78M2a/YfBRPDNKPjwd9b931dyibrzAwOc64D1Yibhv2PQnqebAtUCtQocxx7kWJjrB81dH1DiCy5JzenqeRdDAD+Ifkfj/5sNZWg4ipKe55BP9Y3Dgooeva+0ps75+bkJh1nmeJ6CACPjkxjN7MVBhMOJTj1h4WuyPxLH1Mfd5vcxmWr3Bl35lT/sCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAhxAuZjF0k2raAkgsFdxvGDC5YZdcquqYMqWX5yXiQvL4pWI9CRSxnfAkIkuhw0Q2HJT4HaU7dGxevkkxN7qGO9gM82EdpowUlrnhVE1tub4K8v/MiRHOTiD1ys2+UnEkN2hMevLdRIIG1VJLTGZtgvfqllQD/pj9bIvW8I3y2btQIN+XbA8Wp9eeZBidv/ViRfYNDpmwIgvnlz3prqDEqFBFgRZcduQRmiQ1xFQiEmbG23mTDaVZKqdN2ZtdVtlf5pmZ4J4kq3uBfDO2PFM8XI8NbODgPos+3DoVBA6/KnE48x1lMRLU3GAuWSHYWGSDxWhWIwmXrRdfkArX1ftYlw==" ],
        "priority" : [ "100" ]
      }
    }, {
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAhlc3RnwYzhUuvK4E5fAfo3iawwMtEX4/jFrLP08SnUG+pJ79OVcmqaWuw6ekCUhgg6pJXsFs1RVpPvL3P2I7SKBGQZqt5edpFUwy50dunbJliJMqwy/uwBEQ3yy3L9sEdbIPrgvu1oQw4P4QVg7k3qaRt30JDrWJMabJjE3Ra4I9OhT23lt/tu+Se3QetFLQ7iJOlGYPAppYnvAJHmanZDF3sfsbgV0DuLG8MgEDHf0xfxAkQfpbhsBNPsrHRNX/dWokLORnj79w6n8EQsibMGmpE1pqhcDVpHfHOea4z84DM/LtxcHZrEZ6Dszddkz7fHrVcLMhpoSHszryPIXx4wIDAQABAoIBAHqk7wK7Uo36CrQYjsI5KTk9ZtS4dpGs12lUjo9aqhzFI734pCeQJ+zjJJzc1EXhPLOXZ+pI3gnexTnB6PWFwae5IsrL4wyr6mSWLza0IQl5D3bTHEwb23SfX+7PTOI0qmqkx+nWXRKcll8hs1pNuKaIHSoNzZIPK5QXt5MOjCz/1pNNikgPs2LRsUxKatkXdB/zmynzf+03zrq/0x+/+dHt/dKbfB1ow6pJhCNHIGI/eLDOsf4ewQPYOXkCLbZ4ae9C7sflyD1JjCfVDdAZuuHBAQa6nsAuXGt++XQUlimLu0KYU4ln0vLsZpGthRTMIUrFtkFOdGSFBxjYS81uy7ECgYEA9haXpDiltibbtbl2tTqGDyoZDPlmp7h6xorq8Qy5t3Bfw5guN8ifY36dc4oD/WFKyMglZm7+4qnVtH7LaepCXQ74biOb94fLxMGXXUrGNNKKNBIgp7n6WdPrrVgGf0AsqL5MfPeosHRVE2OTAnnoHa/3CrbssbNWvNZk04kqcMkCgYEAi8Bl8QEe562wtPHCO4L43GqKEz0nayeJCXcDpOIsOySKrqAwdfXLVaciaiNXunkL9Wbgqn1KCql46xfKLVbsELCXNadvUD+aDYdpjj3NL36MyNshIoU0uOXynpHGGROS1iShT1V0OTR0TmvH4UQF69eRFNvSeGi3voX7JBJSL0sCgYEAyponFqkcpS6wzJh4xxP7sxhxr2DVx1f2nOdaLkLP09rMvPfZdUvTDdL8RldmmYE0VMGTKRZQ+sPgkc2iIv0ezga5OdRPYCeI9+B6gfBB5tM/vUb/Y5eWKcZzzi8eij2HhxXFW016sGvWbzQXoH5FP8vTlBquHE8OJkJMmGvhaSECgYASItjX6vZQyKirAsjbIkcbi7P5hTEtZccR9GEDr9pfnoFk4iMH2+sUZYlAzu9eosDbiwtS9Ml8Erw/findsm8WR2SIMP9wIaDjapRXQkvzgu/QTSfCrBjIegb/bxmPPYwLwFsyyXs4xUbmunQJFuPR1HregxyQRb66ufZ6muoRewKBgQDiGF/MOh8IZDjytmcXju2TjMHkM5b9HRazw6hl5LTQo5mKZQ6JXNVPsyxZt1KEK5JsBboYzBTMuJ730KY7ocf4WZGRNDne/fm1DjZmCmd2RkKry2ohJgSlcLrAI63xdt2CxYhTEJGTiikokqfBenjGEB5yFx+Zxf+I5j/W0YPJRw==" ],
        "certificate" : [ "MIICqTCCAZECBgGEwuASYTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1wb2Mtdm5nLXJlYWxtMB4XDTIyMTEyOTEwMTExNVoXDTMyMTEyOTEwMTI1NVowGDEWMBQGA1UEAwwNcG9jLXZuZy1yZWFsbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIZXN0Z8GM4VLryuBOXwH6N4msMDLRF+P4xayz9PEp1BvqSe/TlXJqmlrsOnpAlIYIOqSV7BbNUVaT7y9z9iO0igRkGareXnaRVMMudHbp2yZYiTKsMv7sAREN8sty/bBHWyD64L7taEMOD+EFYO5N6mkbd9CQ61iTGmyYxN0WuCPToU9t5bf7bvknt0HrRS0O4iTpRmDwKaWJ7wCR5mp2Qxd7H7G4FdA7ixvDIBAx39MX8QJEH6W4bATT7Kx0TV/3VqJCzkZ4+/cOp/BELImzBpqRNaaoXA1aR3xznmuM/OAzPy7cXB2axGeg7M3XZM+3x61XCzIaaEh7M68jyF8eMCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAhgp0q8v2JQpQoIHPGRAfpK/6cpwTw/8Cnt9wawlLNHRpFXOZiTEVl7+8zJVe6nt3RqIjyMQWVm/ac9j9zujR65NukVUP4CjAr3ea93pyZx+iZF4+czDzjW/B9g9g64vA0HBLrMu/dUOrgKjwx9tKhSxLq9C/qZ+09USp7vz4ZpFMG/s+qtJ6sCoRiTpyOoCLp5AFN1cagpXIYNrSOiSn15x3v7SeJI2M3cO6wT1QaqaULQ6ueX3dGL2twJwrgQv2TeF+yTKmJ/Xk7LO436HUDkReHOXMXAjYwn+WeEManRpIu3S7eXLQdu4cXq1fdpdbRFIxOeihF4VOZiUBNOlDIw==" ],
        "priority" : [ "100" ]
      }
    }, {
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "9035f426-9c89-44bf-a119-44147003150e" ],
        "secret" : [ "7ityBGkVxc9TWEMcPm0LNQ" ],
        "priority" : [ "100" ]
      }
    }, {
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "5d1841ac-76fb-4ef4-a2b0-1abc6f904a0e" ],
        "secret" : [ "uOrghokvDiUfUgyz28GSomiuiTOtoF9W5GEvzCsc72YYL0Xd2guUt0-oyTB2XsIlO4YabTjtlCmbr1rpF0eVMw" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ "" ],
  "authenticationFlows" : [ {
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "flowAlias" : "forms",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  }, {
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false,
      "autheticatorFlow" : true
    } ]
  }, {
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "userSetupAllowed" : false,
      "autheticatorFlow" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "userProfileEnabled" : "false",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5"
  },
  "keycloakVersion" : "16.1.1",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}